#!/usr/bin/env bash
# vim: ft=bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

DOCKER_IMAGE_NAME=solanum-builder
DOCKER_CONTAINER_ID=''
SOLANUM_VERSION=$(grep defproject project.clj | cut -d ' ' -f 3 | tr -d \")
SOLANUM_OUTPUT=''

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-s] -o output-path

Build solanum inside a linux docker container. Places the compiled binary at
the provided output path.

Available options:

-h, --help      Print this help and exit
-v, --verbose   Print script debug info
-o, --output    Path to place compiled executable
EOF
  exit
}

msg() {
  echo >&2 -e "\033[36m${1-}\033[0m"
}

die() {
  local msg=$1
  local code=${2-1}
  echo >&2 -e "\033[31m${msg}\033[0m"
  exit "$code"
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT

  if [[ -n $DOCKER_CONTAINER_ID ]]; then
    msg "Removing temporary container"
    docker rm -f $DOCKER_CONTAINER_ID
  fi
}

parse_params() {
  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    -o | --output)
      SOLANUM_OUTPUT="${2-}"
      shift
      ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  CMD_ARGS=("$@")

  # check required params and arguments
  [[ -z "${SOLANUM_OUTPUT-}" ]] && die "Missing required parameter: --output"

  return 0
}


### Script Execution ###

parse_params "$@"

mkdir -p $(dirname $SOLANUM_OUTPUT)

msg "Building docker image $DOCKER_IMAGE_NAME for $SOLANUM_VERSION"
docker build -t $DOCKER_IMAGE_NAME:$SOLANUM_VERSION .

DOCKER_CONTAINER_ID=$(docker create --platform linux/amd64 $DOCKER_IMAGE_NAME:$SOLANUM_VERSION)
[[ -n $DOCKER_CONTAINER_ID ]] || die "Couldn't create docker build container" 2

docker start $DOCKER_CONTAINER_ID

msg "Copying code"
tar -cf - project.clj resources src svm script \
    | docker cp - "${DOCKER_CONTAINER_ID}:/opt/solanum/"

msg "Building uberjar"
docker exec -t \
    $DOCKER_CONTAINER_ID \
    ./script/uberjar

msg "Compiling native image"
docker exec \
    --env GRAAL_XMX=4500m \
    $DOCKER_CONTAINER_ID \
    ./script/compile

docker cp "${DOCKER_CONTAINER_ID}:/opt/solanum/solanum" "$SOLANUM_OUTPUT"

msg "Wrote executable to $SOLANUM_OUTPUT"
ls -lh $SOLANUM_OUTPUT
