#!/usr/bin/env bash
# vim: ft=bash

set -Eeuo pipefail

GRAAL_XMX=${GRAAL_XMX:-"6000m"}
SOLANUM_JAR="target/uberjar/solanum.jar"
SOLANUM_OUTPUT="solanum"

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-s] [-j uberjar-path] [-o output-path]

Compile a solanum uberjar into a native-image for the current platform.

Available options:

-j, --jar       Path to the uberjar
-o, --output    Path to place compiled executable
-v, --verbose   Print script debug info
-h, --help      Print this help and exit
EOF
  exit
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1}
  msg "$msg"
  exit "$code"
}

parse_params() {
  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    -j | --jar)
      SOLANUM_JAR="${2-}"
      shift
      ;;
    -o | --output)
      SOLANUM_OUTPUT="${2-}"
      shift
      ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  CMD_ARGS=("$@")
  [[ ${#CMD_ARGS[@]} -ne 0 ]] && die "Unexpected script arguments: $CMD_ARGS"

  return 0
}


### Script Execution ###

parse_params "$@"

NATIVE_IMAGE_CMD="$GRAAL_HOME/bin/native-image"

[[ -f "$SOLANUM_JAR" ]] || die "No uberjar file at $SOLANUM_JAR"
[[ -n "$GRAAL_HOME" ]] || die "GRAAL_HOME is not set"
[[ -x $NATIVE_IMAGE_CMD ]] || die "native-image tool not available at $NATIVE_IMAGE_CMD"

export JAVA_HOME=$GRAAL_HOME
export PATH=$GRAAL_HOME/bin:$PATH

mkdir -p $(dirname $SOLANUM_OUTPUT)

args=(
    "-jar" "$SOLANUM_JAR"
    "--native-image-info"
    "--no-server"
    "--allow-incomplete-classpath"
    "--report-unsupported-elements-at-runtime"
    "--enable-url-protocols=http,https"
    "--initialize-at-run-time=io.netty.handler.ssl.ConscryptAlpnSslEngine"
    "--initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslEngine"
    "--initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger"
    "-H:ReflectionConfigurationFiles=svm/reflection-config.json"
    "-J-Xmx$GRAAL_XMX"
    "-J-Dclojure.spec.skip-macros=true"
    "-J-Dclojure.compiler.direct-linking=true"
    "--verbose"
)

exec "$NATIVE_IMAGE_CMD" "${args[@]}"
